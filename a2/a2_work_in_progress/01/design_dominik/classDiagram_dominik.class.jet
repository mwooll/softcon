{"diagram":"ClassDiagram","nodes":[{"methods":"playGame():void\ninitializeGame():void -- [asking how many players, how many points, creating players, asking for their names]\naddPlayer():void\n","name":"Game","x":1510,"y":40,"attributes":"aWinPoints:int\naPlayerNumber:int","id":9,"type":"ClassNode"},{"methods":"getUserInput():String\nvalidateWinCondition(String):boolean\nvalidatePlayerNumber(String):boolean\nvalidatePlayerNames(String):boolean\nvalidateDiceSelection(String):boolean\nvalidateContinue(String):boolean","name":"InputParser","x":1890,"y":250,"attributes":"","id":0,"type":"ClassNode"},{"methods":"getScore():int\nsetScore(int):void\nupdateTurnsPlayed():void","name":"Player","x":960,"y":20,"attributes":"aName:String\naScore:int\naRank:int -- [1 = starting player, 2 = next etc..]\naTurnsPlayed:int -- [Each Player is initialized with 0, for each turn played add 1]\n","id":3,"type":"ClassNode"},{"methods":"","name":"Card","x":760,"y":380,"attributes":"aName:String\naRuleset:Ruleset","id":5,"type":"ClassNode"},{"methods":"","name":"Bonus","x":850,"y":810,"attributes":"aBonus:int","id":13,"type":"ClassNode"},{"methods":"","name":"Cloverleaf","x":930,"y":890,"attributes":"","id":14,"type":"ClassNode"},{"methods":"","name":"PlusMinus","x":540,"y":810,"attributes":"","id":16,"type":"ClassNode"},{"methods":"<abstract> explainRules():String\n<abstract> determineValidDice(ArrayList<Dice>):ArrayList<Dice>\n<abstract> sumUpPoints(ArrayList<DiceCombo>):int\n? what to do if tutto ?","name":"Ruleset <Abstract class>","x":630,"y":570,"attributes":"","id":17,"type":"ClassNode"},{"methods":"add(Card):void\npeek():Card -- [might be needed to check what the last card was]\ngetSize():int\nisEmpty():boolean","name":"DiscardPile","x":960,"y":360,"attributes":"","id":6,"type":"ClassNode"},{"methods":"playRound():int","name":"Turn","x":1610,"y":300,"attributes":"aPlayer:Player\naScore:int\naNumberTuttos:int","id":19,"type":"ClassNode"},{"methods":"","name":"<<enum>>\nDieValue","x":1970,"y":840,"attributes":"","id":2,"type":"ClassNode"},{"methods":"getDice():ArrayList<Die>","name":"<<enum>>\nDiceCombo","x":1280,"y":660,"attributes":"SINGLE_ONE\nSINGLE_TWO\nSINGLE_THREE\nSINGLE_FOUR\nSINGLE_FIVE\nSINGLE_SIX\nTRIPLET_ONE\nTRIPLET_TWO\nTRIPLET_THREE\nTRIPLET_FOUR\nTRIPLET_FIVE\nTRIPLET_SIX","id":4,"type":"ClassNode"},{"methods":"roll():ArrayList<Die>  --  [returns ordered list of rolled dice who haven't been used]\nremove(ArrayList<DiceCombo>):void -- [for each DiceCombo, remove all the Dice for each Combo from aDiceLeft]","name":"Roll (or DiceSet?)","x":1470,"y":650,"attributes":"aDiceLeft:ArrayList<Die>\naDiceUsed:ArrayList<DiceCombo>","id":8,"type":"ClassNode"},{"methods":"IsEmpty():boolean\ndraw():Card ","name":"Deck","x":960,"y":240,"attributes":"","id":7,"type":"ClassNode"},{"methods":"","name":"Round","x":1620,"y":470,"attributes":"aRuleset:Ruleset\naScore:int","id":18,"type":"ClassNode"},{"methods":"","name":"Fireworks","x":600,"y":890,"attributes":"","id":10,"type":"ClassNode"},{"methods":"","name":"x2","x":770,"y":890,"attributes":"","id":12,"type":"ClassNode"},{"methods":"","name":"Stop","x":680,"y":810,"attributes":"","id":11,"type":"ClassNode"},{"methods":"","name":"Straight","x":990,"y":810,"attributes":"","id":15,"type":"ClassNode"},{"methods":"rollDie():DieValue -- [reassign faceValue to randomly picked DieValue]","name":"Die","x":1500,"y":830,"attributes":"faceValue:DieValue","id":1,"type":"ClassNode"}],"edges":[{"startLabel":"","middleLabel":"","start":9,"end":6,"endLabel":"","type":"AggregationEdge","Aggregation Type":"Aggregation"},{"startLabel":"","middleLabel":"","start":9,"end":7,"endLabel":"","type":"AggregationEdge","Aggregation Type":"Aggregation"},{"startLabel":"","middleLabel":"","start":9,"end":0,"endLabel":"","type":"AggregationEdge","Aggregation Type":"Aggregation"},{"startLabel":"","middleLabel":"","start":7,"end":5,"endLabel":"","type":"AggregationEdge","Aggregation Type":"Aggregation"},{"startLabel":"","middleLabel":"","start":8,"end":1,"endLabel":"","type":"AggregationEdge","Aggregation Type":"Aggregation"},{"startLabel":"","middleLabel":"","start":1,"directionality":"Unspecified","end":2,"endLabel":"","type":"AssociationEdge"},{"startLabel":"","middleLabel":"","start":8,"end":4,"endLabel":"","type":"AggregationEdge","Aggregation Type":"Aggregation"},{"startLabel":"","middleLabel":"","start":6,"end":5,"endLabel":"","type":"AggregationEdge","Aggregation Type":"Aggregation"},{"startLabel":"","middleLabel":"","start":9,"end":3,"endLabel":"","type":"AggregationEdge","Aggregation Type":"Aggregation"},{"Generalization Type":"Implementation","start":16,"end":17,"type":"GeneralizationEdge"},{"Generalization Type":"Implementation","start":11,"end":17,"type":"GeneralizationEdge"},{"Generalization Type":"Implementation","start":10,"end":17,"type":"GeneralizationEdge"},{"Generalization Type":"Implementation","start":12,"end":17,"type":"GeneralizationEdge"},{"Generalization Type":"Implementation","start":13,"end":17,"type":"GeneralizationEdge"},{"Generalization Type":"Implementation","start":14,"end":17,"type":"GeneralizationEdge"},{"Generalization Type":"Implementation","start":15,"end":17,"type":"GeneralizationEdge"},{"startLabel":"","middleLabel":"","start":17,"directionality":"Unspecified","end":5,"endLabel":"","type":"AssociationEdge"},{"startLabel":"","middleLabel":"","start":9,"end":19,"endLabel":"","type":"AggregationEdge","Aggregation Type":"Aggregation"},{"startLabel":"","middleLabel":"","start":18,"end":8,"endLabel":"","type":"AggregationEdge","Aggregation Type":"Aggregation"},{"startLabel":"","middleLabel":"","start":18,"end":17,"endLabel":"","type":"AggregationEdge","Aggregation Type":"Aggregation"},{"startLabel":"","middleLabel":"","start":19,"end":18,"endLabel":"","type":"AggregationEdge","Aggregation Type":"Aggregation"}],"version":"3.4"}
